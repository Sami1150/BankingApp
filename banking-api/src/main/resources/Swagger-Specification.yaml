openapi: 3.0.1
info:
  title: Banking Application
  version: v1
servers:
  - url: http://localhost:8080
paths:
  /api/v1/account/edit:
    put:
      tags:
        - account-controller
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
  /api/v1/user/login:
    post:
      tags:
        - user-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/transaction/withdrawfunds:
    post:
      tags:
        - transaction-controller
      operationId: withdrawFunds
      parameters:
        - name: amount
          in: query
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
  /api/v1/transaction/transferfunds:
    post:
      tags:
        - transaction-controller
      operationId: transferFunds
      parameters:
        - name: amount
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
  /api/v1/transaction/addfunds:
    post:
      tags:
        - transaction-controller
      operationId: addFunds
      parameters:
        - name: amount
          in: query
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
  /api/v1/transaction/add:
    post:
      tags:
        - transaction-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
  /api/v1/balance/add:
    post:
      tags:
        - balance-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Balance'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Balance'
  /api/v1/account/add:
    post:
      tags:
        - account-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
  /api/v1/user/users:
    get:
      tags:
        - user-controller
      operationId: findAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
  /api/v1/user/role:
    get:
      tags:
        - user-controller
      operationId: getRole
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/transaction:
    get:
      tags:
        - transaction-controller
      operationId: findAll_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Transaction'
  /api/v1/balance:
    get:
      tags:
        - balance-controller
      operationId: findAll_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Balance'
  /api/v1/balance/getbalance:
    get:
      tags:
        - balance-controller
      operationId: getBalance
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: number
                format: double
  /api/v1/account:
    get:
      tags:
        - account-controller
      operationId: findAll_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Account'
  /api/v1/account/all:
    get:
      tags:
        - account-controller
      operationId: all
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Account'
  /api/v1/account/{id}:
    delete:
      tags:
        - account-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        address:
          type: string
    Transaction:
      type: object
      properties:
        transaction_id:
          type: integer
          format: int64
        date:
          type: string
        amount:
          type: number
          format: double
        transactionType:
          type: string
        description:
          type: string
    Balance:
      type: object
      properties:
        balance_id:
          type: integer
          format: int64
        date:
          type: string
        amount:
          type: number
          format: double
        balanceType:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        password:
          type: string
        roles:
          type: string
        status:
          type: string
        loginAttempts:
          type: integer
          format: int32
        loginAt:
          type: string
          format: date-time
